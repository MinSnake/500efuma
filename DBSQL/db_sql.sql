CREATE DATABASE  IF NOT EXISTS `500efuma` /*!40100 DEFAULT CHARACTER SET utf8 */;
USE `500efuma`;
-- MySQL dump 10.13  Distrib 5.6.17, for Win32 (x86)
--
-- Host: localhost    Database: 500efuma
-- ------------------------------------------------------
-- Server version	5.6.20

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `fm_admin`
--

DROP TABLE IF EXISTS `fm_admin`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fm_admin` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `code` longtext NOT NULL,
  `account` varchar(40) NOT NULL,
  `password` varchar(40) NOT NULL,
  `name` varchar(20) NOT NULL,
  `email` varchar(100) DEFAULT NULL,
  `headimg` varchar(500) DEFAULT NULL,
  `ctm` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `utm` timestamp NULL DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `fm_admin`
--

LOCK TABLES `fm_admin` WRITE;
/*!40000 ALTER TABLE `fm_admin` DISABLE KEYS */;
INSERT INTO `fm_admin` VALUES (1,'6cc8c26d6ca0356c6890dcd1e8c35387','saki','30330e97a2bde4a811348340a16485de','大魔王','zha_zha@outlook.com','/Upload/headimg/saki.jpg','2014-12-12 10:15:10',NULL);
/*!40000 ALTER TABLE `fm_admin` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `fm_article_list`
--

DROP TABLE IF EXISTS `fm_article_list`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fm_article_list` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(500) NOT NULL,
  `content` longtext NOT NULL,
  `type_id` int(11) NOT NULL,
  `tags` varchar(500) DEFAULT NULL,
  `admin_id` int(11) NOT NULL,
  `ctm` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `utm` timestamp NULL DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=21 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `fm_article_list`
--

LOCK TABLES `fm_article_list` WRITE;
/*!40000 ALTER TABLE `fm_article_list` DISABLE KEYS */;
INSERT INTO `fm_article_list` VALUES (15,'Linux搭建LAMP环境(源码安装)适用于ubuntu,linux deepin','当前系统为Linux-deepin-2014 64位\n\n----\n###需要编译到的源码文件\n* httpd-2.2.27.tar.gz\n* mysql-5.6.17.tar.gz\n* php-5.4.28.tar.gz\n* libxml2-2.6.3.tar.gz\n* libpng-1.6.10.tar.gz\n* jpegsrc.v6b.tar.gz\n* freetype-2.5.3.tar.gz\n* libmcrypt-2.5.8.tar.gz\n* autoconf-2.61.tar.gz\n* libgd-2.1.0.tar.gz\n* zlib-1.2.8.tar.gz\n\n上面这些是基本的编译文件，如果需要其他的功能，比如**memcache**，则需要另外下载编译文件进行安装\n\n----\n\n###检查编译环境\n源码包安装方式需要Gcc编译环境，所以要检查下系统是否已经安装了gcc。\n\n		sudo dpkg --get-selections|grep gcc\n\n如果有输出安装信息，就说明编译的环境已经安装了。\n\n---\n\n###卸载默认的软件\n检查是否有相关软件\n\n        sudo dpkg --get-selections|grep 软件名称\n\n检测服务是否正在运行\n\n如果正在运行，则需要停止后才能进行卸载，主要针对apache,mysql\n\n        netstat -tnl  \n\n        apache默认端口 80   mysql默认端口 3306\n\n停止服务\n\n        sudo /etc/init.d/服务名 stop\n\n卸载软件\n\n如果是ded安装的，则使用 \n\n		sudo apt-get -remove 软件名称\n\n如果是源码安装的，删除文件夹即可\n\n---\n\n###编译和安装软件\n安装过程一般都是使用\n\n		tar zxvf 文件名   （解压）\n\n然后进入目录\n\n	sudo ./congfigure  （配置）\n\n        sudo make （编译）\n\n        sudo make install （安装）\n\n---\n\n###安装libxml2\n\n		sudo ./configure --prefix=/usr/local/libxml2\n\n		sudo make\n\n这一步在执行的时候遇到了错误，在网上查找资料找到了解决方法：\n\n打开解压之后的文件夹，打开nanohttp.c  找到1588行 在方法中添加 0777的权限设置，即修改成\n\n        fd = open(filename, O_CREAT | O_WRONLY,0777);\n接下来继续\n\n        sudo make install\n\n---\n###安装libmcrypt\n\n        sudo ./configure --prefix=/usr/local/libmcrypt\n\n        sudo make\n\n        sudo make install\n\n---\n\n###安装zlib\n>注意：安装zlib之前需要安装此软件，命令：\n>\n>sudo apt-get install zlib1g-dev		\n\n        sudo ./configure --prefix=/usr/local/zlib\n\n        sudo make\n\n        sudo make install\n\n---\n###安装libpng\n\n        sudo ./configure --prefix=/usr/local/libpng\n\n        sudo make\n\n        sudo make install\n\n---\n\n###安装jpeg6\n\n>需要手动建立目录:\n\n		sudo mkdir /usr/local/jpeg6  //建立jpeg6软件安装目录\n\n		sudo mkdir /usr/local/jpeg6/bin     //建立存放命令的目录\n\n		sudo mkdir /usr/local/jpeg6/lib      //创建jpeg6库文件所在目录\n\n		sudo mkdir /usr/local/jpeg6/include   //建立存放头文件目录\n\n		sudo mkdir -p /usr/local/jpeg6/man/man1    //建立存放手册的目录\n>安装命令:\n\n		sudo ./configure  \\\n\n		--prefix=/usr/local/jpeg6/ \\             \n\n		--enable-shared \\     //建立共享库使用的GNU的libtool\n\n		--enable-static       //建立静态库使用的GNU的libtool \n\n>\n\n		sudo make\n\n		sudo make install\n\n---\n\n###安装freetype\n\n		sudo ./configure --prefix=/usr/local/freetype\n		\n		sudo make\n		\n		sudo make install\n\n---\n\n###安装autoconf\n\n        sudo ./configure\n\n>提示 : error: GNU M4 1.4 is required    \n\n>打开 [http://ftp.gnu.org/gnu/m4/](http://ftp.gnu.org/gnu/m4/)  选择最新版本的下载，这里我选择的是 m4-1.4.17\n\n安装这个文件\n\n		sudo ./configure\n		sudo make\n		sudo make install\n继续安装autoconf  \n  \n		sudo ./configure\n		sudo make\n		sudo make install\n\n---\n\n###安装apache服务器\n\n       	sudo ./configure  \\   //执行当前目录下软件自代的配置命令\n\n		--prefix=/usr/local/apache2 \\    //指定Apache软件安装的位置\n		\n		--sysconfdir=/etc/httpd  \\     //指定Apache服务器的配置文件存放位置\n		\n		--with-z=/usr/local/zlib/ \\     //指定zlib库文件的位置\n		\n		--with-included-apr  \\       //使用捆绑APR/APR-Util的副本\n		\n		--enable-so \\              //以动态共享对象(DSO)编译\n		\n		--enable-deflate=shared \\       //缩小传输编码的支持\n		\n		--enable-expires=shared \\        //期满头控制\n		\n		--enable-rewrite=shared \\        //基于规则的URL操控\n		\n		--enable-static-support          //建立一个静态链接版本的支持 \n\n>\n\n		sudo make\n		\n		sudo make install \n\n注意:APACHE安装完成后,/usr/local/apache2即为apache的根目录,而/etc/httpd/为apache的配置目录\n\n检查配置文件目录\n\n		sudo vi /etc/httpd/httpd.conf\n\n在文件的上方空白处添加：\n\nServerName localhost:80  //监听本机的80端口\n\n		sudo /usr/local/apache2/bin/apachectl start    \n\n启动Apache \n\n		sudo /usr/local/apache2/bin/apachectl stop    \n\n关闭Apache \n\n		netstat -tnl|grep 80     //查看80端口是否开启 \n\nhttp://localhost/去访问Apache服务器 \n\n		sudo echo \"/usr/local/apache2/bin/apachectl start\" >> /etc/rc.local    //添加自启动\n\n注意:若此启动无法写进文件,请用vi编辑器直接编辑,写在该文件的代码段 \'exit 0\'  之前即可\n\n---\n###安装mysql数据库\n\n解压mysql源码安装包\n\n		tar -zxvf mysql-5.5.37.tar.gz\n\n安装一些编译需要的组件     \n\n安装cmake组件\n\n		sudo apt-get install cmake\n\n安装libncurses5-dev组件\n\n        sudo apt-get install libncurses5-dev\n\n安装gcc-c++组件\n\n        sudo apt-get install build-essential\n\n安装bison组件\n\n        sudo apt-get install bison\n\n设置用户组\n\n		sudo groupadd mysql\n		sudo useradd -r -g mysql mysql\n\n编译安装\n\n		sudo cmake \\\n		-DCMAKE_INSTALL_PREFIX=/usr/local/mysql \\\n		-DMYSQL_DATADIR=/usr/local/mysql/data \\\n		-DDEFAULT_CHARSET=utf8 \\\n		-DDEFAULT_COLLATION=utf8_general_ci \\\n		-DMYSQL_UNIX_ADDR=/tmp/mysqld.sock \\\n		-DWITH_DEBUG=0 \\\n		-DWITH_INNOBASE_STORAGE_ENGINE=1\n\n如果编译通过则开始安装，安装时间很长		\n\n		sudo make\n		sudo make install\n\n配置相应的文件\n\n进入 /usr/local/mysql \n\n		sudo chown -R mysql .\n\n        sudo chgrp -R mysql .\n\n        sudo ./scripts/mysql_install_db \n\n        --user=mysql --basedir=/usr/local/mysql \n\n        --datadir=/usr/local/mysql/data \n\n        --no-defaults\n\n配置完成后修改权限\n\n        sudo chown -R root .\n\n        sudo chown -R mysql data\n\n复制配置文件\n\n        sudo cp ./support-files/my-medium.cnf /etc/my.cnf\n\n配置my.cnf信息，找到[mysqld]，然后追加进去\n\n        [mysqld]\n\n        user = mysql\n\n        basedir = /usr/local/mysql\n\n        datadir  = /usr/local/mysql/data\n\n        character-set-server = utf8\n\n将mysql.server拷贝/etc/init.d下：\n\n		sudo cp ./support-files/mysql.server /etc/init.d/mysql  \n\n启动mysql\n\n		sudo /etc/init.d/mysql start\n\n>遇到启动失败“Starting MySQL * Couldn\'t find MySQL server (/usr/bin/mysqld_safe)”时\n\n        sudo rm /etc/mysql/my.cnf\n\n确认mysql是否安装成功\n\n	sudo /usr/local/mysql/bin/mysqladmin version\n\n设置软连接\n\n		cd /usr/local/mysql/bin\n\n		sudo ln -s /usr/local/mysql/bin/mysql /usr/bin\n	\n	　　　sudo ln -s /usr/local/mysql/bin/mysqladmin /usr/bin\n\n		sudo ln -s /usr/local/mysql/bin/mysqldump /usr/bin\n\n给root用户设置密码\n\n		mysqladmin -u root password \"xxx\"\n\n进入mysql看看吧\n\n		Mysql -u root -p\n\n		sudo rm /etc/mysql/my.cnf\n\n---\n\n###安装php\n\n这里使用了简易的安装，之后的扩展另外安装(其实是我总是遇到错误解决太麻烦了，安装了N次之后感觉这个方法最好，基本是不会出错的)\n\n一些扩展我会在下面进行另外的安装，我感觉这样比较清晰。\n\n这里安装的php仅仅关联了apache，mysql\n\n之后会在扩展中安装：pdo_mysql等扩展\n\n    	sudo ./configure \n\n		--prefix=/usr/local/php \n\n    	--with-apxs2=/usr/local/apache2/bin/apxs --with-mysql=/usr/local/mysql/ \n\n    	--enable-mbstring \n\n    	--enable-xml \n\n    	--enable-sockets\n\n\n错误：configure: error: xml2-config not found. Please check your libxml2 installation.\n\n    sudo apt-get install libxml2-dev\n\n\n复制php.ini \n\n    cp /home/sniper/Downloads/php/php.ini-development /usr/local/php/lib/php.ini\n\n\n打开Apache配置文件 \n    sudo gvim /etc/httpd/httpd.conf\n在后边加上 \n\n    PHPIniDir /usr/local/php/\n\n\n    AddType application/x-httpd-php .php\n\n重启apache 在apache的工作目录中写一个phpinfo的文件，然后进入localhost看看\n\n```php\n<?php\n	phpinfo();\n?>\n```\n\n---\n\n###安装Mcrypt扩展模块\n\n进入解压后的php文件的ext文件夹中，可以看到很多的扩展包，找到Mcrypt\n\n        cd /home/你的名字/php-5.4.37/ext/mcrypt\n\n运行phpize\n\n        /usr/local/php/bin/phpize\n\n然后会有如下显示：\n\n这说明可以扩展\n\n接下来编译安装：\n\n        sudo ./configure \\\n\n        --with-php-config=/usr/local/php/bin/php-config\n\n        --with-mcrypt=/usr/local/libmcrypt\n\n        sudo make\n\n        sudo make install\n\n会出现一个路径，进入目录下就能看到so文件扩展\n\n        Installing shared extensions:     /usr/local/php5/lib/php/extensions/no-debug-non-zts-20060613/\n\n然后编辑php.ini文件,在最后添加\n\n        extension_dir = \"/usr/local/php5/lib/php/extensions/no-debug-non-zts-20060613/\"\n        extension = \"mcrypt.so\"\n\n然后重启apache，然后再访问phpinfo.php 就看到支持mcrypt了。\n\n---\n\n###安装pdo_mysql扩展\n\n原理基本与上面相同，只是编译的配置写法不同，这里需要加上mysql的路径。\n\n进入pdo_mysql目录下,运行phpize\n\n        sudo./configure \n        --with-php-config=/usr/local/php/bin/php-config\n        --with-pdo-mysql=/usr/local/mysql\n\n        sudo make\n\n        sudo make install\n\n然后编辑php.ini文件,接着添加\n\n        extension = \"pdo_mysql.so\"\n\n然后重启apache，然后再访问phpinfo.php 就看到支持pdo_mysql了。\n\n---\n\n###安装GD库扩展\n\n前面的和上面一样\n\n注意要提前安装 png jepg  freetype 这些\n\n        sudo ./configure \n\n        --with-php-config=/usr/local/php/bin/php-config \n        --with-jpeg-dir=/usr/local/libjpeg/ \n        --with-png-dir=/usr/local/libpng/ \n        --with-freetype-dir=/usr/local/freetype/\n\n        sudo make\n\n        sudo make install\n\n然后编辑php.ini文件,接着添加\n\n        extension = \"gd.so\"\n\n然后重启apache，然后再访问phpinfo.php 就看到支持gd了。\n\n---\n\n###安装memcached扩展\n\n在[http://pecl.php.net/package/memcache](http://pecl.php.net/package/memcache) 下载扩展\n\n        下载memcached-3.0.8.tar.gz \n\n解压这个文件\n\n        tar -zxvf memcached-3.0.8.tar.gz \n\n进入解压文件夹中，运行phpize\n\n        sudo ./configure \n        --enable-memcache \n        --with-php-config=/usr/local/php/bin/php-config \n        --with-zlib-dir=/usr/local/zlib/\n\n        sudo make\n\n        sudo make install\n\n然后编辑php.ini文件,接着添加\n\n        extension = \"memcache.so\"\n\n然后重启apache，然后再访问phpinfo.php 就看到支持memcache了。\n\n\n---\n\n###安装SOAP扩展\n\n进入php中的soap文件夹，运行phpize\n\n        sudo ./configure \n\n        --with-php-config=/usr/local/php/bin/php-config \n\n        -–enable-soap\n\n        sudo make\n\n        sudo make install\n\n然后编辑php.ini文件,接着添加\n\n        extension = \"soap.so\"\n\n然后重启apache，然后再访问phpinfo.php 就看到支持soap了。\n\n---\n\n###安装APC\n\n在[http://pecl.php.net/get/APC-3.1.13.tgz](http://pecl.php.net/get/APC-3.1.13.tgz)下载扩展\n\n运行phpize\n\n        sudo ./configure \n\n        --enable-apc-mmap \n\n        --enable-apc \n\n        --enable-apc-filehits \n\n        --with-php-config=/usr/local/php/bin/php-config\n\n        sudo make\n\n        sudo make install\n\n然后编辑php.ini文件,接着添加\n\n        extension = \"apc.so\"\n\n然后重启apache，然后再访问phpinfo.php 就看到支持apc了。\n\n---\n\n###安装xdebug\n\n下载文件为： xdebug-2.2.5\n过程和上面一样，解压，进入目录，运行phpize，然后安装\n\n		sudo ./configure \n	\n		--with-php-config=/usr/local/php/bin/php-config \n	\n		make && make install\n\n接下来修改php.ini文件\n\n在[Zend]模块之前加入\n\n        zend_extension=\"/usr/local/php/lib/php/extensions/no-debug-non-zts-20100525/xdebug.so\" \n        xdebug.auto_trace=1\n        xdebug.collect_params=1\n        xdebug.collect_return=1\n        xdebug.profiler_enable=1\n        xdebug.remote_enable=true     \n        xdebug.remote_host=192.168.1.101\n        xdebug.remote_port=9000    \n        xdebug.remote_handler=dbgp\n        xdebug.trace_output_dir=\"/home/kotori/xdebug\"\n        xdebug.profiler_output_dir=\"/home/kotori/xdebug\"\n\n编辑完php.ini 文件后 要重启下web 服务器。\n\n---\n\n###安装curl\n\n在[http://curl.haxx.se/download/](http://curl.haxx.se/download/) 下载curl文件\n\n解压后，进入目录进行安装：\n\n        sudo ./configure --prefix=/usr/local/curl\n\n        sudo make  \n\n        sudo make install\n\n之后进入php扩展文件夹中的curl文件夹\n\n运行phpize\n\n        sudo ./configure \n        --with-php-config=/usr/local/php/bin/php-config \n        --with-curl=/usr/local/curl\n\n        sudo make \n\n        sudo make install\n\n\n然后编辑php.ini文件,接着添加\n\n        extension = \"curl.so\"\n\n然后重启apache，然后再访问phpinfo.php 就看到支持curl了。',7,'Linux,LAMP,Ubuntu,php',1,'2014-12-16 10:44:35','2014-12-16 10:44:35'),(16,'HTML5 Canvas 涂鸦画板 (服务器:PHP)','工作之余做了个web的涂鸦画板\n\n主要功能：\n\n1.实现鼠标画图，可以选择颜色和大小\n\n2.可以将画好的图片下载\n\n3.可以读取图片进行涂鸦\n\n对于Canvas我了解的也不是很多，新手代码，多多指教。\n\n---\n\n###HTML页面\n\n很简单的一个画板的页面，基本没什么重要的地方\n\n```html\n<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n<html>\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n<title>涂鸦画板</title>\n<script type=\"text/javascript\" src=\"jquery-1.8.3.js\"></script>\n<script type=\"text/javascript\" src=\"jquery.form.js\"></script>\n<link href=\"index.css\" rel=\"stylesheet\" type=\"text/css\">\n</head>\n<body>\n    <div id=\"chooseColor\"></div>\n    <div id=\"chooseSize\"></div>\n    <div id=\"paint\">\n        <canvas id=\"pad\" width=\"800\" height=\"600\" />\n    </div>\n    <input type=\"button\" id=\"download\" value=\"下载\" />\n    <!-- 上传图片  -->\n    <input type=\"file\" name=\"mypic\" id=\"chooseFile\" />\n    <input type=\"button\" value=\"读取文件\" id=\"load\" />\n    <!-- 进度条 -->\n    <div class=\"progress\">\n        <span class=\"bar\"></span><span class=\"percent\">0%</span >\n    </div>\n    <!-- 隐藏区域 -->\n    <img id=\"tulip\" src=\"\" alt=\"加载显示区\" />\n</body>\n<script type=\"text/javascript\" src=\"index.js\"></script>\n</html>\n```\n\n---\n\n###CSS部分\n也只是用来搞搞页面的排版而已\n\n```css\nbody,input {\n    font-size: 9pt;\n}\n \n#paint,#chooseSize {\n    clear: both;\n}\n \n.option {\n    float: left;\n    width: 20px;\n    height: 20px;\n    border: 2px solid #cccccc;\n    margin-right: 4px;\n    margin-bottom: 4px;\n}\n \n.active {\n    border: 2px solid black;\n}\n \n.lw {\n    text-align: center;\n    vertical-align: middle;\n}\n \nimg.output {\n    border: 1px solid green;\n}\n \n#pad {\n    border: 2px solid gray;\n    cursor: arrow;\n}\n \n#chooseFile {\n    float: left;\n    width: 140px;\n}\n \n#tulip {\n    display: none;\n}\n \n#download {\n    margin-left: 550px;\n}\n \n#load {\n    float: left;\n    width: 80px;\n}\n```\n\n---\n\n###JS文件\n好了，终于到重点了~！\n\n1.首先实现绘图的功能有三块组成：颜色选择器，大小选择器，画图\n\n```js\n/**\n * 颜色选择器\n */\nfunction chooseColor() {\n    var colors = \"red;orange;yellow;green;blue;indigo;purple;black;white\".split(\';\');\n    var sb = [];\n    $.each(colors,function(i,v){\n        sb.push(\"<div class=\'option\' style=\'background-color:\" + v + \"\'></div>\");\n    });\n    $(\"#chooseColor\").html(sb.join(\"\\n\"));\n}\n```\n\n```js\n/**\n * 大小选择器\n */\nfunction chooseSize(){\n    sb = [];\n    for (var i = 1; i <= 9; i++) sb.push(\"<div class=\'option lw\'>\" + \"<div style=\'margin-top:#px;margin-left:#px;width:%px;height:%px\'></div></div>\".replace(/%/g, i).replace(/#/g, 10 - i / 2));\n    $(\"#chooseSize\").html(sb.join(\'\\n\'));\n}\n```\n\n```js\n/**\n * 画图\n */\nfunction canvas(){\n    var $clrs = $(\"#chooseColor .option\");\n    var $lws = $(\"#chooseSize .option\");\n    $clrs.click(function(){\n        $clrs.removeClass(\"active\");\n        $(this).addClass(\"active\");\n        p_color = this.style.backgroundColor;\n        $lws.children(\"div\").css(\"background-color\",p_color);\n    }).first().click();\n     \n    //点选线条粗细选项时切换焦点并取得宽度存入p_width\n    $lws.click(function(){\n        $lws.removeClass(\"active\");\n        $(this).addClass(\"active\");\n        p_width = $(this).children(\"div\").css(\"width\").replace(\"px\",\"\");\n         \n    }).eq(3).click();\n     \n    // 取得canvas context\n    var $canvas = $(\"#pad\");\n    var ctx = $canvas[0].getContext(\"2d\");\n    ctx.lineCap = \"round\";\n    ctx.fillStyle = \"white\"; //整个canvas涂上白色的背景，避免PNG的透明底色效果\n    ctx.fillRect(0,0,$canvas.width(),$canvas.height());\n    var drawMode = false;\n     \n    // canvas点选，移动，放开按键时进行绘图动作\n    $canvas.mousedown(function(e){\n        ctx.beginPath();\n        ctx.strokeStyle = p_color;\n        ctx.lineWidth = p_width;\n        ctx.moveTo(e.pageX - $canvas.position().left, e.pageY - $canvas.position().top);\n        drawMode = true;\n    }).mousemove(function(e){\n        if(drawMode){\n            ctx.lineTo(e.pageX - $canvas.position().left, e.pageY - $canvas.position().top);\n            ctx.stroke();\n        }\n    }).mouseup(function(e){\n        drawMode = false;\n    });\n}\n```\n2.接下来是下载功能\n\n```js\n/**\n * 下载当前所绘制的图像\n */\nfunction downloadPic(){\n    // 使用toDataURL()将图转换成png文件\n    var saveFile = function(data, filename) {\n        var save_link = document.createElementNS(\'http://www.w3.org/1999/xhtml\', \'a\');\n        save_link.href = data;\n        save_link.download = filename;\n        var event = document.createEvent(\'MouseEvents\');\n        event.initMouseEvent(\'click\', true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n        save_link.dispatchEvent(event);\n    };\n    $(\"#download\").click(function() {\n        var myCanvas = document.getElementById(\"pad\");\n        var image = myCanvas.toDataURL(\"image/png\").replace(\"image/png\", \"image/octet-stream\");\n        // window.location.href=image;\n        var filename = \'paint_\' + (new Date()).getTime() + \'.png\';\n        saveFile(image, filename);\n    });\n}\n```\n\n3.最后是读取并加载图片的功能\n\n其实我这里做的读取图片就是将用户所选的图片上传到服务器中，再由JS调出图片显示在一个隐藏的IMG中，最后将这个IMG中的对象取出显示在Canvas中，看起来很笨╮(╯▽╰)╭\n\n还有我使用了一个叫jquery.form.js 的插件用来上传，个人感觉还蛮好用的\n\n```js\n//获取当前文件名\nfunction ch_(url){  \n    url=url.split(\"\\\\\");//这里要将 \\ 转义一下\n    var filename = url[url.length-1];\n    return filename;\n}\n \n \n//加载隐藏模块中的图片\nfunction loadImg(){\n    $(\'#load\').click(function(){\n        // 加载到canvas\n        var c= document.getElementById(\"pad\");\n        var ctx = c.getContext(\"2d\");\n        var img=document.getElementById(\"tulip\");\n        ctx.drawImage(img,0,0);\n    });\n}\n \n/**\n * 上传图片\n */\nfunction uploadImg(){\n    var bar = $(\'.bar\');\n    var percent = $(\'.percent\');\n    var showimg = $(\'#showimg\');\n    var progress = $(\".progress\");\n    $(\"#chooseFile\").wrap(\"<form id=\'myupload\' action=\'upload.php\' method=\'post\' enctype=\'multipart/form-data\'></form>\");\n    $(\"#chooseFile\").change(function(){\n        $(\"#myupload\").ajaxSubmit({\n            dataType: \'json\',\n            uploadProgress: function(event, position, total, percentComplete) {\n                var percentVal = percentComplete + \'%\';\n                bar.width(percentVal);\n                percent.html(percentVal);\n            },\n            success: function(data){\n                // alert(\'上传成功\');\n                var file = $(\'#chooseFile\').val();\n                var filename = ch_(file);\n                var src = \'paint/\' + filename;\n                $(\'#tulip\').attr(\'src\',src);\n            },\n            error: function(xhr){\n                alert(\'上传失败\');\n            }\n        });\n    });\n}\n```\n\n---\n\n###服务器部分(PHP)\n设置上传大小不能超过1M，文件类型只能为JPG或者PNG\n\n```php\n<?php\n$picname = $_FILES [\'mypic\'] [\'name\'];\n$picsize = $_FILES [\'mypic\'] [\'size\'];\nif ($picname != \'\') {\n    if ($picsize > 1024000) {\n        echo \'图片的大小不能超过1M\';\n        exit ();\n    }\n    $type = strstr ( $picname, \'.\' );\n    if ($type != \'.jpg\' && $type != \'.png\') {\n        echo \'图片格式不对\';\n        exit ();\n    }\n    $pics = $picname;\n    // 上传路径\n    $pic_path = \'paint/\' . $pics;\n    move_uploaded_file ( $_FILES [\'mypic\'] [\'tmp_name\'], $pic_path );\n}\n$size = round ( $picsize / 1024, 2 );\n$arr = array (\n        \'name\' => $picname,\n        \'pic\' => $pics,\n        \'size\' => $size\n);\necho json_encode ( $arr );\n?>\n```\n\n---\n\n###大功告成\n接下来就是画画啦~O(∩_∩)O~\n\n选择你想涂鸦的图片上传，然后点击读取文件\n\n涂鸦完之后点击下载就能看到你所画的图像啦！\n\n大家有兴趣的可以自己尝试着新增一些功能，比如说橡皮擦，添加一些形状之类的。\n\n最后给个效果图(福利)\n\n![Alt text](http://static.oschina.net/uploads/img/201308/22150403_KFb2.png)\n',78,'canvas,画图,php,html5',1,'2014-12-18 02:47:56','2014-12-18 02:47:56'),(17,'Yii中themes的使用','这里说所的为Yii的1.1版本。\n\n先看官网的文档：\n>Theming是一个在Web应用程序里定制网页外观的系统方式。通过采用一个新的主题，网页应用程序的整体外观可以立即和戏剧性的改变。\n\n那么上述就是themes的大体的功能了，具体使用如下：\n\n        Yii::app()->theme =\'wifi\' ; \n\n一般来说，这个方法都会放在父类中，在我的项目中是这样定义：\n\n```php\n<?php\nclass WifiController extends CController{\n     \n    public $layout=\'\';\n    public $menu=array();\n    public $breadcrumbs=array();\n     \n    public function init(){\n        parent::init();\n        Yii::app()->theme=\'wifi\';\n        header(\"Content-Type: text/html; charset=UTF-8\");\n    }\n}\n```\n\n然后在模块中进行继承\n```php\n<?php\nclass TemplateController extends WifiController{\n     \n    public function init() {\n        parent::init();\n    }\n     \n    public function actionIndex(){\n        $this->render(\'index\');\n    }\n```\n\n这里在加载index.php的时候就去去themes文件夹中进行查找\n路径为 /thems/wifi/views/wifi/default/index.php\n这里我所创建的模块名也为wifi，主题名也为wifi\n事实上路径是这样的  /themes/主题名/views/模块名/action名/页面文件.php\n\n具体文件中的路径：\n\n![Alt text](/Upload/fef5416q185fefwef.png)\n\n然后要记住，需要配置layouts文件\n默认都是加载layouts中的main.php文件\n\n我这里的main.php\n```php\n<?php echo $content;?>\n```\n\n这样一来整个themes的使用就完成了。',2,'yii,php',1,'2014-12-18 02:47:15','2014-12-18 02:47:15'),(18,'MaHua是什么?','##MaHua是什么?\n一个在线编辑markdown文档的编辑器\n\n向Mac下优秀的markdown编辑器mou致敬\n\n##MaHua有哪些功能？\n\n* 方便的`导入导出`功能\n    *  直接把一个markdown的文本文件拖放到当前这个页面就可以了\n    *  导出为一个html格式的文件，样式一点也不会丢失\n* 编辑和预览`同步滚动`，所见即所得（右上角设置）\n* `VIM快捷键`支持，方便vim党们快速的操作 （右上角设置）\n* 强大的`自定义CSS`功能，方便定制自己的展示\n* 有数量也有质量的`主题`,编辑器和预览区域\n* 完美兼容`Github`的markdown语法\n* 预览区域`代码高亮`\n* 所有选项自动记忆\n\n##有问题反馈\n在使用中有任何问题，欢迎反馈给我，可以用以下联系方式跟我交流\n\n* 邮件(dev.hubo#gmail.com, 把#换成@)\n* QQ: 287759234\n* weibo: [@草依山](http://weibo.com/ihubo)\n* twitter: [@ihubo](http://twitter.com/ihubo)\n\n##捐助开发者\n在兴趣的驱动下,写一个`免费`的东西，有欣喜，也还有汗水，希望你喜欢我的作品，同时也能支持一下。\n当然，有钱捧个钱场（右上角的爱心标志，支持支付宝和PayPal捐助），没钱捧个人场，谢谢各位。\n\n##感激\n感谢以下的项目,排名不分先后\n\n* [mou](http://mouapp.com/) \n* [ace](http://ace.ajax.org/)\n* [jquery](http://jquery.com)\n\n##关于作者\n\n```javascript\n  var ihubo = {\n    nickName  : \"草依山\",\n    site : \"http://jser.me\"\n  }\n```\n',10,'markdown',1,'2014-12-18 09:25:10','2014-12-18 09:25:10'),(19,'欢迎使用马克飞象','# 欢迎使用马克飞象\n\n@(示例笔记本)[马克飞象|帮助|Markdown]\n\n**马克飞象**是一款专为印象笔记（Evernote）打造的Markdown编辑器，通过精心的设计与技术实现，配合印象笔记强大的存储和同步功能，带来前所未有的书写体验。特点概述：\n \n- **功能丰富** ：支持高亮代码块、插入 *LaTex* 公式，工作学习好帮手\n- **得心应手** ：支持插入图片，无论是本地上传/图片URL/拖放图片/直接截图粘贴，随心所欲\n- **深度整合** ：支持选择笔记本和添加标签，支持从印象笔记跳转编辑，轻松管理\n\n> 号外号外，离线客户端来啦！[点击下载](https://chrome.google.com/webstore/detail/%E9%A9%AC%E5%85%8B%E9%A3%9E%E8%B1%A1/kidnkfckhbdkfgbicccmdggmpgogehop/)\n\n-------------------\n\n### Markdown简介\n\n> Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档，然后转换成格式丰富的HTML页面。    —— [维基百科](https://zh.wikipedia.org/wiki/Markdown)\n\n正如您在阅读的这份文档，它使用简单的符号标识不同的标题，将某些文字标记为**粗体**或者*斜体*，下面列举了几个高级功能，更多语法请按`Ctrl + /`查看帮助。 \n\n#### 代码块\n``` python\n@requires_authorization\ndef somefunc(param1=\'\', param2=0):\n    \'\'\'A docstring\'\'\'\n    if param1 > param2: # interesting\n        print \'Greater\'\n    return (param2 - param1 + 1) or None\nclass SomeClass:\n    pass\n>>> message = \'\'\'interpreter\n... prompt\'\'\'\n```\n\n#### LaTex 公式\n$$	x = \\dfrac{-b \\pm \\sqrt{b^2 - 4ac}}{2a} $$\n\n#### 表格\n| Item      |    Value | Qty  |\n| :-------- | --------:| :--: |\n| Computer  | 1600 USD |  5   |\n| Phone     |   12 USD |  12  |\n| Pipe      |    1 USD | 234  |\n\n### 印象笔记相关\n\n#### 笔记本和标签\n**马克飞象**增加了`@(笔记本)[标签A|标签B]`语法, 以选择笔记本和添加标签。 **绑定账号后**， 输入`(`自动会出现笔记本列表，请从中选择。自己纯手工输入无效。\n\n#### 标题\n**马克飞象**会自动使用文档内出现的第一个标题作为笔记标题。例如本文，就是第一行的 `欢迎使用马克飞象`。\n\n#### 快捷编辑\n保存在印象笔记中的笔记，右上角会有一个红色的编辑按钮，点击后会回到**马克飞象**中打开并编辑该笔记。\n>**注意：**目前用户在印象笔记中单方面做的任何修改，马克飞象是无法自动感知和更新的。所以请务必回到马克飞象编辑。\n\n#### 数据同步\n**马克飞象**通过**将Markdown原文以隐藏内容保存在笔记中**的精妙设计，实现了对Markdown的存储和再次编辑。既解决了其他产品只是单向导出HTML的单薄，又规避了服务端存储Markdown带来的隐私安全问题。这样，服务端仅作为对印象笔记 API调用和数据转换之用。\n\n >**隐私声明：用户所有的笔记数据，均保存在印象笔记中。马克飞象不存储用户的任何笔记数据。**\n\n#### 离线存储\n**马克飞象**使用浏览器离线存储将内容实时保存在本地，不必担心网络断掉或浏览器崩溃。为了节省空间和避免冲突，已同步至印象笔记并且不再修改的笔记将删除部分本地缓存，不过依然可以随时通过`文档管理`打开。\n\n> **注意：**虽然浏览器存储大部分时候都比较可靠，但印象笔记作为专业云存储，更值得信赖。以防万一，**请务必经常及时同步到印象笔记**。\n\n### 快捷键\n\n帮助    `Ctrl + /`\n同步文档    `Ctrl + S`\n创建文档    `Ctrl + Alt + N`\n最大化编辑器    `Ctrl + Enter`\n文档管理    `Ctrl + O`\n系统菜单    `Ctrl + M`\n\n整行移动    `Alt + 上/下箭头`\n删除整行    `Ctrl + D`\n\n加粗    `Ctrl + B`\n插入图片    `Ctrl + G`\n插入链接    `Ctrl + L`\n提升标题    `Ctrl + H`\n\n### 关于收费\n\n**马克飞象**目前已正式发布，为新用户提供 10 天的试用期，试用期过后需要[续费](maxiang.info/vip.html)才能继续使用。未购买或者未及时续费，将不能同步新的笔记。之前保存过的笔记依然可以编辑。\n\n\n### 反馈与建议\n- 微博：[@马克飞象](http://weibo.com/u/2788354117)，[@GGock](http://weibo.com/ggock \"开发者个人账号\")\n- 邮箱：<hustgock@gmail.com>\n\n---------\n感谢阅读这份帮助文档。请点击右上角，绑定印象笔记账号，开启全新的记录与分享体验吧。\n',10,'markdown',1,'2014-12-18 09:26:00',NULL),(20,'我理解的【依赖注入】【控制反转】','###前言\n\n鄙人一个新嫩的程序员，刚刚开始做过大约1年的J2EE，那个时候最常使用的就诸如SSH,SSI之类的框架。\n\n在学习的过程中遇到了`依赖诸如`和`控制反转`这2个词。\n\n当时听理论完全是云里雾里，工作中最多也就知道怎么使用spring这种框架来达到`IOC`的目的。\n\n现在虽然转做PHP了，但是这种设计模式依然是存在的。于是乎在这里说一说我自己理解的`依赖注入`\n\n###依赖注入 or 控制反转\n\n其实`依赖注入`和`控制反转`说的是同一个东西.都是一种设计模式,这种模式可以用来减少程序之间的耦合\n\n下面我在PHP下说说对其的理解.\n\n###正片\n\n我们首先写一个最常用的链接数据库的类,就按照最原始的方式:\n\n* 在构造函数中include数据库类的文件\n* 然后实例化Db并且设置链接参数\n* 之后创建了一个数据库查询的方法，使用了构造函数中创建的Db实例\n\n代码如下：\n\n```php\nclass test {\n    private $_db;\n    \n    function __construct(){\n        include \'./lib/Db.php\';\n        $this->_db = new Db(\'localhost\',\'root\',\'root\',\'test\');\n    }\n    \n    function querySQL($sql){\n        $this->_db->query($sql);\n    }\n}\n```\n\n看起来上面的代码很符合我们想要的功能，但是以后有更多的类需要用到这个db组件，然后突然有一天db类发生了变化，密码也变了，那不是要把所有的文件都重新改一次？\n\n为了解决上面这个问题，工厂模式诞生了。\n\n我们创建一个Factory类，然后通过方法进行获取db组件。\n\n代码如下：\n\n```php\nclass Factory {\n\n    public static function getDb(){\n        include \"./lib/Db.php\";\n        return new Db(\"localhost\",\"root\",\"root\",\"test\");\n    }\n    \n }\n```\n\n然后我们的test类就可以这样写：\n\n```php\nclass test {\n\n    private $_db;\n    \n    function __construct(){\n        $this->_db = Factory::getDb();\n    }\n    \n    function querySQL($sql){\n        $this->_db->query($sql);\n    }\n\n}\n```\n\n这样看起来貌似比刚才方便了一些，但是还是存在问题。\n\n这里只是将原来的直接与Db类耦合变成了与Factory耦合，万一要是哪天工厂方法要改名字了，getDb这个方法需要改，那不是又变成了上面的那个问题？(简直有病233)\n\n但是这种需求又是真实存在的，那么又有一种解决方法。\n\n我们不在test中实例化Db组件了，我们从外部进行`注入`！\n\n代码如下：\n\n```php\n<?php\n\nclass test {\n    private $_db;\n    \n    function setDb($connection){\n        $this->_db = $connection;\n    }\n    \n    function querySQL($sql){\n        $this->_db->query($sql);\n    }\n}\n\n//我们在这里进行调用\n$est = new test();\n//注入\n$test->setDb(Factory::getDb());\n$test->querySQL();\n\n?>\n```\n这样一来我们可以看到类里面已经没有Db类，工厂类的影子了。\n\n我们从外部调用setDb方法，将实例直接`注入`进去。\n\n这样test完全不用关心db链接是怎么生成的了。\n\n这就是`依赖注入`，实现的过程不是在控制器内部存在依赖关系，而是让其作为一个参数进行传递，这样让我们的代码可以更好的维护，降低程序的耦合度。\n\n\n###正片后的正片\n\n我们再假设下，在test中我们还需要用到除了Db之外的其他外部类，怎么办？\n\n难道要这样？\n\n```php\n$test->setDb(Factory::getDb());//注入db连接\n$test->setFile(Factory::getFile());//注入文件处理类\n$test->setImage(Factory::getImage());//注入Image处理类\n...\n```\n\n想累死爹啊~！\n\n好的，我们懒，所以又去写了个工厂方法！\n\n```php\nclass Factory {\n    public static function getTest(){\n        $test = new test();\n        $test->setDb(Factory::getDb());//注入db连接\n        $test->setFile(Factory::getFile());//注入文件处理类\n        $test->setImage(Factory::getImage());//注入Image处理类\n        return $test;\n    }\n }\n```\n\n然后实例化的时候就变成了这样：\n\n```php\n$test = Factory::getTest();\n$test->querySQL();\n```\n\n╮(╯▽╰)╭\n唉~~我们怎么又看到了工厂方式的场景？\n\nso，这种解决方式并不好\n\n于是乎`容器`诞生了，我们又称作IOC，DI\n\n接下来我们不用set了！这样我们也就不需要工厂方法进行二次包装了吧。\n\n我们在test中定义一个容器\n\n代码如下：\n\n```php\nclass test {\n    \n    private $_di;\n    \n    function __construct($di){\n        $this->_di = $di;\n    }\n    \n    function querySQL($sql){\n        $this->_di->get(\'db\')->query($sql);\n    }\n}\n\n$di = new Di();\n$di->set(\"db\",function(){\n    return new Db(\"localhost\",\"root\",\"root\",\"test\");\n})\n\n$test = new test($di);\n$test->querySQL($sql);\n\n```\n这里的di就是IOC容器\n\n所谓的容器就是存放我们可能会用到的各种类的实例。\n\n我们通过$di->set()设置一个名为db的实例，因为是通过回调函数的方式传入的，\n所以set的时候并不会立刻进行实例化，而是当$di->get(\'db\')的时候才会进行实例化\n\n同样，我们还可以再di类中融入单例模式。\n\n这样我们只要在全局范围定义一个Di类，然后将所有的需要注入的类放到这个容器中，然后将容器作为构造函数的参数传递到test中，就可以再test类里面从容器中获取实例，当然我们也可以使用其他的函数，不一定要是构造函数，总之就是自己想怎么搞都行！\n\n###结尾\n\n那么上面就是目前我对`依赖注入`的一些理解，要是有理解上的错误，请提出，大家共同学习。\n\n随便提一句，我想写这篇博客是因为看到OSC上有个人提出的4个面试题之一。\n\n[http://www.oschina.net/question/215831_217378](http://www.oschina.net/question/215831_217378)\n\n大家也可以想下其他的题目应该怎么回答。\n\n',2,'依赖注入,控制反转,IOC',1,'2014-12-19 11:12:56',NULL);
/*!40000 ALTER TABLE `fm_article_list` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `fm_article_type`
--

DROP TABLE IF EXISTS `fm_article_type`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fm_article_type` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(45) NOT NULL,
  `key` varchar(45) NOT NULL,
  `admin_id` int(11) NOT NULL,
  `status` tinyint(4) DEFAULT '1',
  `ctm` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `utm` timestamp NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `key_UNIQUE` (`key`)
) ENGINE=InnoDB AUTO_INCREMENT=79 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `fm_article_type`
--

LOCK TABLES `fm_article_type` WRITE;
/*!40000 ALTER TABLE `fm_article_type` DISABLE KEYS */;
INSERT INTO `fm_article_type` VALUES (1,'JAVA','java',1,1,'2014-12-10 02:35:35',NULL),(2,'PHP','php',1,1,'2014-12-10 02:35:53',NULL),(3,'Python','python',1,1,'2014-12-10 02:35:53',NULL),(4,'动漫资讯','acg',1,1,'2014-12-10 02:36:41',NULL),(5,'随笔','essay',1,1,'2014-12-10 02:36:41',NULL),(6,'NodeJS','nodejs',1,1,'2014-12-10 02:36:58',NULL),(7,'Linux','linux',1,1,'2014-12-10 02:37:15',NULL),(8,'C++','cjj',1,1,'2014-12-10 02:38:04',NULL),(9,'Git','git',1,1,'2014-12-10 02:39:07',NULL),(10,'开发杂项','other',1,1,'2014-12-10 02:39:07',NULL),(78,'HTML5','html5',1,1,'2014-12-18 02:47:47',NULL);
/*!40000 ALTER TABLE `fm_article_type` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `fm_system`
--

DROP TABLE IF EXISTS `fm_system`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fm_system` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(100) NOT NULL,
  `value` varchar(1000) DEFAULT NULL,
  `key` varchar(20) NOT NULL,
  `admin_id` int(11) NOT NULL,
  `ctm` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `utm` timestamp NULL DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `fm_system`
--

LOCK TABLES `fm_system` WRITE;
/*!40000 ALTER TABLE `fm_system` DISABLE KEYS */;
/*!40000 ALTER TABLE `fm_system` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2014-12-19 19:33:19
